# There are 6 permutations for the numbers 1, 2, and 3
# (1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), and (3, 2, 1)
# The y position is the same for each button since they are in a row
y=270
button1x=185
button2x=537
button3x=911
# There are no 2 dimensional arrays, only 1D.
# So I'll have to be creative with how I do this
# I'll just make each permutation into one string and parse the order using mod.
permutations=(123 132 213 231 312 321)

# this function takes an integer 1, 2,or 3 and simulates a tap on that button in the app
tapButton() {
    case "$1" in
        1)
            input tap "$button1x" "$y"
            ;;
        2)
            input tap "$button2x" "$y"
            ;;
        3)
            input tap "$button3x" "$y"
            ;;
    esac
}

for perm in "${permutations[@]}"
do
    # Open ButtonCrasher app
    monkey -p com.example.buttoncrasher 1
    # Sleep for 5 seconds while the app opens
    sleep 5;

    # The first button to press is the one in the hundreds place
    first="$((((perm / 10) / 10) % 10))"
    second="$(((perm / 10) % 10))"
    third="$((perm % 10))"
    echo $first $second $third

    tapButton $first
    sleep 1;

    tapButton $second
    sleep 1;

    tapButton $third
    sleep 1;

    # Close the app if it is still open
    am force-stop com.example.buttoncrasher
done